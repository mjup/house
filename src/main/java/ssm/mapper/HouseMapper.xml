<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
 	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--等价于dao接口的实现 namespace必须和接口的类路径一样 -->
<mapper namespace="ssm.dao.HouseDao">
	<insert id="insert" parameterType="ssm.bean.House">
		insert into house(account,descr,floorid,cellid,bdate,shape,area,owner,population,ownerphone,mdate)
			values(#{account},#{descr},#{floorid},#{cellid},#{bdate},#{shape},#{area},#{owner},#{population},#{ownerphone},#{mdate});
		insert into user(account) values(#{account});
	</insert>
	
	<select id="getList" parameterType="map" resultType="ssm.bean.House">
		select * from house 
		<where>
			<if test="account!=null">
				and account=#{account}
			</if>
			<if test="owner!=null">
				and owner like concat('%',#{owner},'%')
			</if>
			<if test="floorid!=null">
				and floorid like concat('%',#{floorid},'%') 
			</if>
		</where>
		limit ${start},#{length}
	</select>
	<select id="getCount" parameterType="map" resultType="integer">
		select count(*) from house
		<where>
			<if test="account!=null">
				and account=#{account}
			</if>
			<if test="owner!=null">
				and owner like concat('%',#{owner},'%')
			</if>
			<if test="floorid!=null">
				and floorid like concat('%',#{floorid},'%') 
			</if>
		</where>
	</select>
	<delete id="delete" parameterType="integer[]">
		delete from house where id  in (
		<foreach collection="array" item="id" separator=",">
			#{id}
		</foreach>
		)
	</delete>
	<update id="update" parameterType="map">
		update house set descr=#{descr},
		bdate=#{bdate},shape=#{shape},area=#{area},owner=#{owner},population=#{population},ownerphone=#{ownerphone},mdate=#{mdate}
		where id in(
		<foreach collection="ids" item="id" separator=",">
			#{id}
		</foreach>
		)
	</update>
	<update id="updateById" parameterType="ssm.bean.House">
		update house set descr=#{descr},
		bdate=#{bdate},shape=#{shape},area=#{area},owner=#{owner},population=#{population},ownerphone=#{ownerphone},mdate=#{mdate}
		where id = #{id}
	</update>
	<select id="getById" parameterType="int" resultType="ssm.bean.House">
		select * from house where id = #{id}
	</select>
	<select id="checkAccount" parameterType="string" resultType="string">
		select account from house where account =#{account}
	</select>
	<select id="getFloorIds" resultType="string">
		select floorid from house group by floorid
	</select>
	<select id="getAccount" resultType="string" parameterType="string">
		select account from house
			<where>
				<if test="_parameter!=null">
					and floorid = #{floorid}
				</if>
			</where>
	</select>
</mapper>